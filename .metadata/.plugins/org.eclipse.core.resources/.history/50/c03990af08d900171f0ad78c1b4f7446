/**
 * 
 */
package com.abhishek.code;

/**
 * @author Abhishek Nath
 *
 */
public class LongestPalindromicSubsequence {

	/**
	 * @param args
	 */
	public static void main(String[] args) {

	}
	
	private static String findLongestPalindromicSubsequence(String input) {
		return findLongestPalindromicSubsequence(input, 0 , input.length() - 1);
	}
	
    private static String findLongestPalindromicSubsequence(String input, int left, int right) {
		if(input.charAt(left)==input.charAt(right)) {
			return String.valueOf(input.charAt(left));
		}
		
		if(left + 1 == right && input.charAt(left)==input.charAt(right)) {
			return String.valueOf(input.charAt(left) + input.charAt(right));
		}
		
		if(input.charAt(left)==input.charAt(right)) {
			return String.valueOf(input.charAt(left)) + 
					findLongestPalindromicSubsequence(input, left+1, right-1) +
					String.valueOf(input.charAt(right));
		}else {
			String subseq1 = findLongestPalindromicSubsequence(input, left+1, right);
			String subseq2 = findLongestPalindromicSubsequence(input, left, right-1);
			if(subseq1.length() > subseq2.length()) {
				return subseq1;
			}
			return subseq2;
		}
	}
}
